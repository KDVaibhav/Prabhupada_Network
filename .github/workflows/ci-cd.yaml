name: CI/CD Pipeline for Dockerized NestJS app

on:
  push:
    branches:
      - devMain
    paths:
      - "backend/**"
  pull_request:
    branches:
      - devMain
    paths:
      - "backend/**"

jobs:
  dockerbuild:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build The Docker Image
        run: docker build backend --file backend/Dockerfile --tag workflow-test:$(date +%s)

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest # Use the latest pnpm version

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20" # Use your desired Node.js version
          cache: "pnpm" # Enable caching for pnpm
          cache-dependency-path: backend/pnpm-lock.yaml

      - name: Install dependencies
        working-directory: backend
        run: pnpm install

      # - name: Run Tests
      #   run: pnpm run test  # Replace with your actual test script if different

      # - name: Lint Code
      #   run: pnpm run lint  # Ensure you have a lint script in package.json

  build-and-publish:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set Docker Image Tag
        run: echo "IMAGE_TAG=$(date +%s)" >> $GITHUB_ENV

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/backend:${{ env.IMAGE_TAG }} 
            ${{ secrets.DOCKER_USERNAME }}/backend:latest
      - name: Image digest
        run: echo ${{ steps.build-and-publish.outputs.digest }}
